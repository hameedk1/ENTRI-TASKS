def reverse_list_at_index(lst, index):
    # Check if index is within the range of the list
    if index < 0 or index >= len(lst):
        print("Error: Index out of range")
        return lst  # Return the original list if index is out of range

    # Split the list into two parts: before and after the index
    part1 = lst[:index]  # Elements before the index
    part2 = lst[index:]  # Elements from the index onwards

    # Reverse the second part (part2)
    reversed_part2 = part2[::-1]

    # Concatenate the reversed second part (reversed_part2) with the first part (part1)
    reversed_list = part1 + reversed_part2

    return reversed_list

# Define a list
my_list = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# Specify the index at which to reverse the list
reverse_index = 3

# Reverse the list at the specified index
result_list = reverse_list_at_index(my_list, reverse_index)

# Print the original list and the reversed list
print("Original list:", my_list)
print(f"Reversed list at index {reverse_index}:", result_list)
